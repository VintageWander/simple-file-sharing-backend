version: '3.8'

name: simple-file-sharing

networks:
  local:

services:

# Main service definition
  backend:
    container_name: backend
    build: .
    command: >
      sh -c
      "apt-get update                                            && \
       apt-get upgrade -y                                        && \
       curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
       apt-get install -y nodejs && npm install -g npm           && \
       cargo  prisma generate                                    && \
       cargo  prisma migrate dev --name production               && \
       cargo  prisma migrate deploy                              && \
       npx -y prisma studio                                       & \
       cargo  run    --release"                                   
    environment:
      # Database
      DATABASE_URL:          "postgres://local:password@postgres:5432/local"

      # Backend environment variables

      # Port is the backend's running port
      PORT:                  8000
      # Origin is the frontend's address, to use with CORS
      ORIGIN:                "http://localhost:5000"

      # Token secrets
      ACCESS_TOKEN_SECRET:   "access-token-secret"
      REFRESH_TOKEN_SECRET:  "refresh-token-secret"

      # Secret key used to encrypt file ids for temporary access
      SHARE_KEY_SECRET:      "local-share-key"

      # AWS S3 tokens
      AWS_ACCESS_KEY_ID:     "local-access-key"
      AWS_SECRET_ACCESS_KEY: "local-secret-key"
      AWS_BUCKET_NAME:       "local-bucket"
      AWS_REGION:            "us-east-1"

      # If you set MINIO to true, make sure to also provide ENDPOINT

      # Minio enable
      MINIO:                 true
      # Minio endpoint
      ENDPOINT:              "http://minio:9000"
    ports:
      - 8000:8000             # Backend endpoint
      - 5555:5555             # Prisma studio
    depends_on:
      - postgres
      - minio
    networks:
      - local

# Database service definition
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: local
      POSTGRES_PASSWORD: password
      POSTGRES_DB: local
    ports:
      - 5432:5432
    # volumes:
    #   - ./data/postgres:/var/lib/postgresql/data
    networks:
      - local

# Minio service definition
  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - 9000:9000
      - 9090:9090
    # volumes:
    #   - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: minio-admin
      MINIO_ROOT_PASSWORD: minio-password
    command: server /data --console-address ":9090"
    networks:
      - local
# Create default bucket on Minio startup
  createbucket:
    container_name: create_bucket_task
    image: minio/mc:latest
    networks:
      - local
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minio-admin minio-password;
      /usr/bin/mc mb minio/sfs-storage;
      /usr/bin/mc anonymous set public minio/sfs-storage;
      /usr/bin/mc admin user svcacct add \
      --access-key local-access-key      \
      --secret-key local-secret-key      \
      minio                              \
      minio-admin;
      "
    


